{"version":3,"sources":["webpack:///./src/templates/posts-by-tag.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/util/Mappers.js","webpack:///./src/components/Header.jsx","webpack:///./src/components/Links.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Meta.jsx","webpack:///./src/components/GoogleAnalytics.jsx","webpack:///./src/components/LicenseFooter.jsx","webpack:///./src/components/Footer.jsx","webpack:///./src/components/Layout.jsx","webpack:///./src/components/PostLink.jsx"],"names":["__webpack_exports__","_ref","data","allMarkdownRemark","tag","pageContext","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","title","image","style","width","height","backgroundImage","replace","svg","position","backgroundColor","img","edges","map","get","_templateObject","post","_components_PostLink__WEBPACK_IMPORTED_MODULE_6__","Object","assign","key","id","query","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","property","styles","wrapper","emotion__WEBPACK_IMPORTED_MODULE_0__","headerImageStyle","Header","active","react__WEBPACK_IMPORTED_MODULE_1___default","className","src","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fluid","loadImage","margin","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","_Links__WEBPACK_IMPORTED_MODULE_3__","linkContainer","emotion__WEBPACK_IMPORTED_MODULE_3__","name","Links","react__WEBPACK_IMPORTED_MODULE_5___default","gatsby__WEBPACK_IMPORTED_MODULE_6__","_ref2","pages","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","tabular","_templateObject2","link","Item","_reach_router__WEBPACK_IMPORTED_MODULE_8__","split","segment","toUpperCase","slice","join","prettify","_public_static_d_740653928_json__WEBPACK_IMPORTED_MODULE_4__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","Meta","_ref$extra","extra","react_helmet__WEBPACK_IMPORTED_MODULE_2__","lang","meta","GoogleAnalytics","_React$Component","apply","this","arguments","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0___default","_proto","prototype","componentDidMount","Component","container","emotion_browser_esm","LicenseFooter","react_default","Icon","xmlns:dct","xmlns:cc","href","rel","footer","Footer","Segment","as","vertical","inverted","Container","Grid","columns","stackable","divided","Column","List","gatsby_browser_entry","Modal","trigger","Content","Description","Form","action","method","Field","control","Input","label","placeholder","TextArea","Button","type","size","LicenseFooter_LicenseFooter","Layout","left","right","extraMeta","extTitle","_ref$header","header","defaultHeader","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","site","full","_GoogleAnalytics__WEBPACK_IMPORTED_MODULE_12__","_Meta__WEBPACK_IMPORTED_MODULE_9__","_Footer__WEBPACK_IMPORTED_MODULE_11__","_public_static_d_2920417930_json__WEBPACK_IMPORTED_MODULE_1__","postLinkContainer","IS_BROWSER","window","PostLink","fields","excerptShort","excerpt","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","thumbnail","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","slug","Subheader","date","innerWidth","tags","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"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","file":"component---src-templates-posts-by-tag-jsx-722335559ba663ef2a5b.js","sourcesContent":["import React from 'react';\r\nimport { Layout } from '../components/Layout';\r\nimport { graphql } from 'gatsby';\r\nimport { get } from '../util/Mappers';\r\nimport { PostLink } from '../components/PostLink';\r\n\r\nfunction mapEdges(data) {\r\n  if (data) {\r\n    return data.edges.map(get`node`).map(post => (\r\n      <PostLink {...post} key={post.id} />\r\n    ));\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nconst svg = tag => (\r\n  `<svg xmlns='http://www.w3.org/2000/svg' width='150' height='150' viewBox='0 0 100 100'>\r\n    <text transform='rotate(-45 100 100)' x='40' y='30' fill='lightblue' style='blue; font-weight: bold; font-family: sans-serif;'>\r\n      %23${tag}\r\n    </text>\r\n  </svg>`.replace(/\\r?\\n/g, '')\r\n    .replace(/</g, '%3C')\r\n    .replace(/>/g, '%3E')\r\n);\r\n\r\nconst img = tag => (\r\n  <div style={{\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundImage: `url(\"data:image/svg+xml,${svg(tag)}\")`,\r\n    position: 'absolute',\r\n    backgroundColor: '#222'\r\n  }}/>\r\n);\r\n\r\nexport default ({ data: { allMarkdownRemark }, pageContext: { tag } }) => (\r\n  <Layout title={`#${tag}`} image={img(tag)}>\r\n    {mapEdges(allMarkdownRemark)}\r\n  </Layout>\r\n);\r\n\r\nexport const query = graphql`\r\n  query PostsByTagQuery($tag: [String]) {\r\n    allMarkdownRemark(\r\n      filter: {frontmatter: {tags: {in: $tag}, skip: {ne: \"yes\"}}},\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          html\r\n          excerpt(pruneLength: 250)\r\n          meta: frontmatter {\r\n            title\r\n            tags\r\n            date(formatString: \"MMMM DD, YYYY [at] HH:MM\")\r\n            thumbnail {\r\n              data: childImageSharp {\r\n                fluid(maxWidth: 2048, quality: 100) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n                fixed(width: 300, height: 300, cropFocus: CENTER, quality: 100) {\r\n                  ...GatsbyImageSharpFixed_noBase64\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\r\n * Maps the given object to it's unbound property.\r\n * @param {string} property Name of the property to be extracted\r\n */\r\nexport const get = property => object => object[property]\r\n\r\n/**\r\n * Wraps the given field <any> inside an object, assigning it to the given\r\n * property name.\r\n * @param {string} property Name to be assigned.\r\n */\r\nexport const put = property => field => ({ [property]: field })\r\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { css } from 'emotion'\nimport { Links } from './Links'\nimport Img from 'gatsby-image'\n\nexport const HEADER_HEIGHT = '256px'\n\nexport const styles = {}\nstyles.wrapper = css`\n  background: black;\n  /* margin-bottom: 1.45rem; */\n  min-height: ${HEADER_HEIGHT};\n  max-height: ${HEADER_HEIGHT};\n  display: flex;\n  justify-content: flex-end;\n  flex-direction: column;\n  position: relative;\n  .container {\n    width: 100%;\n    margin: 0 auto;\n    max-width: 960px;\n    padding: 1.45rem 1.0875rem;\n    padding-bottom: 0;\n    z-index: 10;\n  }\n  a {\n    color: white;\n    text-decoration: none;\n  }\n  .shade {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    box-shadow: 0px -250px 100px -100px black inset;\n    content: '';\n  }\n`\nstyles.headerImageStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n}\n\n/**\n * Loads a fluid image from data.\n * @param {*} image The raw image data from query.\n */\nfunction loadImage(image) {\n  if (image) {\n    if (typeof image === 'string' || image.src) {\n      return <Img fluid={image} style={styles.headerImageStyle} />;\n    } else {\n      return image;\n    }\n  } else {\n    return null;\n  }\n}\n\nexport const Header = ({ title, active, image }) => (\n  <div className={styles.wrapper}>\n    {loadImage(image)}\n    <div className=\"shade\" />\n    <div className=\"container\">\n      <h1 style={{ margin: 0 }}>\n        <Link to=\"/\">{title}</Link>\n      </h1>\n      <Links active={active} />\n    </div>\n  </div>\n)\n","import React from 'react'\r\nimport { graphql, StaticQuery } from 'gatsby'\r\nimport { css } from 'emotion'\r\nimport { get } from '../util/Mappers'\r\nimport { Link } from '@reach/router'\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nexport const styles = {}\r\nstyles.linkContainer = css`\r\n  display: flex;\r\n  .active.item a {\r\n    color: black;\r\n  }\r\n  .ui.menu {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\n/**\r\n * Makes a split-join mapping to prettify page names.\r\n * @param {string} link\r\n * @returns {string}\r\n */\r\nfunction prettify(link) {\r\n  return link.replace(/-/g, ' ')\r\n    .split(' ')\r\n    .map(segment => segment[0].toUpperCase() + segment.slice(1))\r\n    .join(' ');\r\n}\r\n\r\nexport const Links = ({ active }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query ListPagesLinks {\r\n        pages: allFile(\r\n          filter: {\r\n            sourceInstanceName: { eq: \"pages\" }\r\n            name: { nin: [\"index\", \"404\"] }\r\n          }\r\n        ) {\r\n          edges {\r\n            node {\r\n              name\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={({ pages }) => (\r\n      <div className={styles.linkContainer}>\r\n        <Menu tabular>\r\n          {pages.edges\r\n            .map(get`node`)\r\n            .map(get`name`)\r\n            .map(link => (\r\n              <Menu.Item key={link} active={active === link}>\r\n                <Link to={link}>{prettify(link)}</Link>\r\n              </Menu.Item>\r\n            ))}\r\n        </Menu>\r\n      </div>\r\n    )}\r\n  />\r\n)\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\n/**\r\n * Header metadata component and page's title.\r\n * Query is isolated here to make layouts lighter.\r\n */\r\nexport const Meta = ({ title, extra = [] }) => (\r\n  <Helmet title={title}>\r\n    <html lang=\"en\" />\r\n    {extra.map((meta, key) => (\r\n      <meta {...meta} key={key} />\r\n    ))}\r\n  </Helmet>\r\n)\r\n","import React from 'react'\r\n\r\nexport class GoogleAnalytics extends React.Component {\r\n  /**\r\n   * When the component is mounted\r\n   */\r\n  componentDidMount() {\r\n    // Disabled while I figure out why it does not load.\r\n    // const script = document.createElement('script')\r\n    // script.src = 'https://www.googletagmanager.com/gtag/js?id=UA-127063412-1'\r\n    // script.async = true\r\n    // document.body.appendChild(script)\r\n    // window.dataLayer = window.dataLayer || []\r\n    // function gtag() {\r\n    //   window.dataLayer.push(arguments)\r\n    // }\r\n    // gtag('js', new Date())\r\n    // gtag('config', 'UA-127063412-1')\r\n  }\r\n\r\n  /**\r\n   * Does not render anything.\r\n   * Just a substitute for the original script.\r\n   * @override\r\n   */\r\n  render() {\r\n    return null\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { css } from 'emotion'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport const styles = {}\r\nstyles.container = css`\r\n  margin-top: 12px;\r\n  padding-top: 12px;\r\n  color: #494c4f;\r\n  a {\r\n    color: #4c5b69;\r\n  }\r\n`\r\n\r\nexport const LicenseFooter = () => (\r\n  <div className={styles.container}>\r\n    {/* <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\">\r\n      <img\r\n        alt=\"Creative Commons License\"\r\n        style={{ borderWidth: 0 }}\r\n        src=\"https://i.creativecommons.org/l/by-nc-nd/4.0/88x31.png\"\r\n      />\r\n    </a>\r\n    <br /> */}\r\n    <Icon name=\"creative commons\" />\r\n    <span\r\n      {...{ 'xmlns:dct': 'http://purl.org/dc/terms/' }}\r\n      property=\"dct:title\"\r\n    >\r\n      Esmer Games Blog\r\n    </span>\r\n    &nbsp;by&nbsp;\r\n    <a\r\n      {...{ 'xmlns:cc': 'http://creativecommons.org/ns#' }}\r\n      href=\"https://github.com/sigmasoldi3r\"\r\n      property=\"cc:attributionName\"\r\n      rel=\"cc:attributionURL\"\r\n    >\r\n      Pablo Blanco Celdrán\r\n    </a>\r\n    &nbsp;is licensed under a&nbsp;\r\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\">\r\n      Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International\r\n      License\r\n    </a>\r\n    .\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport { css } from 'emotion'\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Container,\r\n  Header,\r\n  List,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  TextArea,\r\n} from 'semantic-ui-react'\r\nimport { Link } from 'gatsby'\r\nimport { LicenseFooter } from './LicenseFooter'\r\n\r\nexport const styles = {}\r\nstyles.footer = css`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  section {\r\n    border-right: 1px solid black;\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin: 10px;\r\n  }\r\n  section:last-child {\r\n    border-right: 0 transparent;\r\n  }\r\n  button.link-like-button {\r\n    background: none;\r\n    border: none;\r\n    padding-left: 0;\r\n    color: #4183c4;\r\n    :hover {\r\n      color: #1e70bf;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Footer = () => (\r\n  <Segment as=\"footer\" vertical inverted className={styles.footer}>\r\n    <Container>\r\n      <Grid columns={3} inverted stackable divided>\r\n        <Grid.Column>\r\n          <Header inverted>Esmer games</Header>\r\n          <List>\r\n            <List.Item>\r\n              <Link to=\"/about\">\r\n                <Icon name=\"question\" /> About\r\n              </Link>\r\n            </List.Item>\r\n            <List.Item>\r\n              <Modal\r\n                trigger={\r\n                  <button className=\"link-like-button\">\r\n                    <Icon name=\"envelope\" /> Contact me\r\n                  </button>\r\n                }\r\n              >\r\n                <Modal.Header>Contact me</Modal.Header>\r\n                <Modal.Content>\r\n                  <Modal.Description>\r\n                    <Form\r\n                      action=\"https://formspree.io/esmer.games.blog@gmail.com\"\r\n                      method=\"POST\"\r\n                    >\r\n                      <Form.Field\r\n                        name=\"name\"\r\n                        control={Input}\r\n                        label=\"Name\"\r\n                        placeholder=\"Your name or something to identify you\"\r\n                      />\r\n                      <Form.Field\r\n                        name=\"body\"\r\n                        control={TextArea}\r\n                        label=\"Message body\"\r\n                        placeholder=\"Your message\"\r\n                      />\r\n                      <Button type=\"submit\">Submit</Button>\r\n                    </Form>\r\n                  </Modal.Description>\r\n                </Modal.Content>\r\n              </Modal>\r\n            </List.Item>\r\n          </List>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Header inverted>Social</Header>\r\n          <a href=\"https://www.instagram.com/esmergames\">\r\n            <Icon size=\"big\" name=\"instagram\" />\r\n          </a>\r\n          <a href=\"https://twitter.com/BlogEsmer\">\r\n            <Icon size=\"big\" name=\"twitter\" />\r\n          </a>\r\n          <a href=\"https://www.facebook.com/Esmer-Games-348138162663198/\">\r\n            <Icon size=\"big\" name=\"facebook\" />\r\n          </a>\r\n          {/* unused atm <a href=\"https://www.reddit.com/user/esmer-man\">\r\n            <Icon size=\"big\" name=\"reddit\" />\r\n          </a> */}\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Header inverted>Technologies</Header>\r\n          <List>\r\n            <List.Item>\r\n              <a href=\"https://reactjs.org/\">\r\n                <Icon name=\"react\" />\r\n                React\r\n              </a>\r\n            </List.Item>\r\n            <List.Item>\r\n              <a href=\"https://nodejs.org/\">\r\n                <Icon name=\"node js\" />\r\n                NodeJS\r\n              </a>\r\n            </List.Item>\r\n            <List.Item>\r\n              <a href=\"https://www.gatsbyjs.org/\">Gatsby</a>\r\n            </List.Item>\r\n            <List.Item>\r\n              <a href=\"https://react.semantic-ui.com/\">Semantic UI React</a>\r\n            </List.Item>\r\n            <List.Item>\r\n              <a href=\"https://pages.github.com/\">\r\n                Hosted at <Icon name=\"github\" />\r\n                Github pages\r\n              </a>\r\n            </List.Item>\r\n          </List>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <LicenseFooter />\r\n    </Container>\r\n  </Segment>\r\n)\r\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport 'semantic-ui-css/semantic.min.css'\nimport 'katex/dist/katex.min.css'\nimport 'prismjs/themes/prism.css'\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css'\nimport '../styles/code.css'\nimport { Meta } from './Meta'\nimport { css } from 'emotion'\nimport { Header as defaultHeader } from './Header'\nimport { Footer } from './Footer'\nimport { GoogleAnalytics } from './GoogleAnalytics'\n\nexport const LINK_LIST_CONTAINER_WIDTH = `980px`\n\nexport const styles = {}\nstyles.wrapper = css`\n  /* Font resize styles - readable */\n  font-size: 1.5em;\n  h1 { font-size: 2em; }\n  .container h1 { font-size: 1.5em; }\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column;\n  justify-content: space-between;\n  .page-content {\n    display: flex;\n    justify-content: space-between;\n    @media (max-width: ${LINK_LIST_CONTAINER_WIDTH}) {\n      padding-top: 16px;\n      display: block;\n    }\n    .side-bar {\n      @media (max-width: ${LINK_LIST_CONTAINER_WIDTH}) {\n        display: none;\n      }\n    }\n    .center-bar {\n      @media (max-width: ${LINK_LIST_CONTAINER_WIDTH}) {\n        margin: 0;\n      }\n      padding: 0px 1.0875rem 1.45rem;\n      padding-top: 0;\n      margin: 32px;\n      max-width: ${LINK_LIST_CONTAINER_WIDTH};\n    }\n  }\n`\n\nexport const Layout = ({\n  left,\n  right,\n  active,\n  image,\n  children,\n  meta: extraMeta,\n  title: extTitle,\n  header: Header = defaultHeader,\n}) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          meta: siteMetadata {\n            title {\n              short\n              full\n            }\n          }\n        }\n      }\n    `}\n    render={({ site: { meta } }) => {\n      const title = extTitle || meta.title.full\n      return (\n        <div className={styles.wrapper}>\n          <GoogleAnalytics />\n          <Meta title={title} extra={extraMeta} />\n          <Header {...{ title, image, active }} />\n          <div className=\"page-content\">\n            <div className=\"side-bar\">{left}</div>\n            <div className=\"center-bar\">{children}</div>\n            <div className=\"side-bar\">{right}</div>\n          </div>\n          <Footer />\n        </div>\n      )\n    }}\n  />\n)\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { css } from 'emotion'\r\nimport Img from 'gatsby-image'\r\nimport { Header, Label } from 'semantic-ui-react'\r\n\r\nexport const THUMBNAIL_SIZE = `300px`\r\nexport const COLLAPSE_WIDTH = 550;\r\n\r\nexport const styles = {}\r\nstyles.postLinkContainer = css`\r\n  .content {\r\n    margin-bottom: 12px;\r\n    margin-top: 12px;\r\n    position: relative;\r\n    display: flex;\r\n  }\r\n  .link-content {\r\n    margin-left: 22px;\r\n  }\r\n  .gatsby-image-wrapper {\r\n    min-width: ${THUMBNAIL_SIZE};\r\n  }\r\n  @media (max-width: ${COLLAPSE_WIDTH}px) {\r\n    & > .content {\r\n      min-height: 300px;\r\n      display: block;\r\n    }\r\n    img {\r\n      border-top-right-radius: 8px;\r\n    }\r\n    position: relative;\r\n    .link-content {\r\n      /* box-shadow: 0 0 100px 32px white inset; */\r\n      /* background-color: rgba(255, 255, 255, 0.5); */\r\n      box-shadow: 0 -280px 32px -32px rgba(255, 255, 255, 0.9) inset;\r\n      margin-left: 0;\r\n      position: absolute;\r\n      bottom: 0;\r\n      width: 100%;\r\n      p, h1 {\r\n        padding: 6px;\r\n      }\r\n      h1 {\r\n        margin: 0;\r\n        /* box-shadow: 0 -130px 32px -32px rgba(255, 255, 255, 0.85) inset; */\r\n      }\r\n      /* p {\r\n        background-color: rgba(255, 255, 255, 0.85);\r\n      } */\r\n    }\r\n  }\r\n  .ui.label {\r\n    color: #4183c4;\r\n  }\r\n  border-radius: 8px;\r\n  img {\r\n    border-top-left-radius: 8px;\r\n  }\r\n  .tag-container {\r\n    padding-bottom: 32px;\r\n    width: 100%;\r\n    border-bottom: 1px solid grey;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n\r\nconst IS_BROWSER = typeof window !== 'undefined';\r\n\r\nexport const PostLink = ({ fields, meta, excerptShort, excerpt }) => (\r\n  <div className={styles.postLinkContainer}>\r\n    <div className=\"content\">\r\n      <Img fluid={meta.thumbnail.data.fluid} />\r\n      <div className=\"link-content\">\r\n        <Header as=\"h1\">\r\n          <Header.Content>\r\n            <Link to={fields.slug}>{meta.title}</Link>\r\n            <Header.Subheader>{meta.date}</Header.Subheader>\r\n          </Header.Content>\r\n        </Header>\r\n        <p>\r\n          {IS_BROWSER && (window.innerWidth <= COLLAPSE_WIDTH) ? excerptShort : excerpt}\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div className=\"tag-container\">\r\n      {meta.tags.map(tag => (\r\n        <Label as=\"a\" href={`/tags/${tag}`} key={tag} tag>\r\n          #{tag}\r\n        </Label>\r\n      ))}\r\n    </div>\r\n  </div>\r\n)\r\n"],"sourceRoot":""}